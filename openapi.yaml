openapi: 3.0.0
info:
  version: 1.0.0
  title: Integrador Repasse
  termsOfService: 'https://repasses.com.br/terms/'
  contact:
    email: suporte@repasses.com.br
    url: 'https://repasses.com.br'
  x-logo:
    url: 'https://www.repasses.com.br/wp-content/themes/2018_repasse_site/assets/images/logo-repasse-white.png'
    backgroundColor: '#2B4F83'
  description: |

    Esta é a API para visualização / cadastro de anúncios da plataforma Repasse
    # Introdução
    Esta especificação visa auxiliar programadores a integrarem seus sistemas com a plataforma Repasse.
    # Jornada do anúncio
    Siga estes passos para publicar um novo anúncio
    1. xdgfsdgf
    1. asfdafsdfsd
tags:
  - name: Car
    description: Operações referentes ao cadastro e edição de anúncios
servers:
  - url: 'http://beta.aplicativorepasse.com.br/api'
  - url: 'http://app.repasse/api'
paths:
  '/store_site/{store_id}/car':
    post:
      tags:
        - Car
      summary: Cria um novo Carro
      description: Novos carros são criados por este endpoint
      operationId: createCar
      parameters:
        - name: store_id
          in: path
          description: Código da loja
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      security:
        - api_key: []
      responses:
        '200':
          description: Carro cadastrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  car_id:
                    type: integer
                    description: ID do carro (anúncio)
                  msg:
                    type: string
                    description: Mensagem informativa
              example:
                car_id: 515
                msg: Anúncio cadastrado com sucesso
        '400':
          description: Um dos campos obrigatórios não foi preenchido
  '/store_site/{store_id}/car/{car_id}':
    parameters:
      - name: store_id
        in: path
        description: Código da loja
        required: true
        schema:
          type: integer
      - name: car_id
        in: path
        description: Código da carro
        required: true
        schema:
          type: integer
    put:
      tags:
        - Car
      summary: Edita carro já publicado
      description: Edição de carro
      operationId: editCar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCar'
        required: true
      security:
        - api_key: []
      responses:
        '200':
          description: Carro editado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  car_id:
                    type: integer
                    description: ID do carro (anúncio)
                  msg:
                    type: string
                    description: Mensagem informativa
              example:
                car_id: 515
                msg: Anúncio cadastrado com sucesso
        '400':
          description: Um dos campos obrigatórios não foi preenchido
  '/store_site/{store_id}/car/{car_id}/image':
    post:
      tags:
        - Car
      summary: Envia uma imagem referente a um carro
      operationId: saveCarPhoto
      parameters:
        - name: store_id
          in: path
          description: Código da loja
          required: true
          schema:
            type: integer
        - name: car_id
          in: path
          required: true
          schema:
            type: integer
          description: Id do carro
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  format: binary
              required:
                - filename
      security:
        - api_key: []
      responses:
        '200':
          description: Imagem enviada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: resultado da operação (true or false)
                  data:
                    type: object
                    description: Dados da operação
                    properties:
                      id:
                        type: integer
                        description: Id da imagem enviada
                      filename:
                        type: string
                        description: Nome do arquivo thumbnail para ser usado no frontend
              example:
                success: true
                data:
                  id: 10
                  filename: 23103210321321.png
        '400':
          description: 'Bad request, falta algum campo obrigatório'
        '404':
          description: Anúncio não existe
  '/store_site/{store_id}/car/{car_id}/image/{image_id}':
    delete:
      tags:
        - Car
      summary: Remove a imagem do carro
      operationId: removeImage
      parameters:
        - name: store_id
          in: path
          description: Código da loja
          required: true
          schema:
            type: integer
        - name: car_id
          in: path
          required: true
          schema:
            type: integer
          description: Id do carro
        - name: image_id
          in: path
          required: true
          schema:
            type: integer
          description: Id da imagem
      security:
        - api_key: []
      responses:
        '200':
          description: Imagem removida com sucesso
        '404':
          description: Imagem não encontrada
        '422':
          description: Um dos parâmetros (loja/carro/imagem) não foi informado
  '/store_site/{store_id}/car/{car_id}/publish':
    post:
      tags:
        - Car
      summary: Publica o carro na plataforma
      description: 'Envia o carro para publicação na plataforma ele vai ser moderado pelo nosso sistema e, caso liberado, estará apto a receber negociações e propostas'
      operationId: publishCar
      parameters:
        - name: store_id
          in: path
          description: Código da loja
          required: true
          schema:
            type: integer
        - name: car_id
          in: path
          required: true
          schema:
            type: integer
          description: Id do anúncio
      security:
        - api_key: []
      responses:
        '200':
          description: 'Enviado com sucesso, o resultado (em análise/publicado/exclusivo) vem no corpo deste resultado'
        '409':
          description: A quantidade de fotos obrigatórias (atualmente entre 4 e 10) está incorreta
        '422':
          description: Falta um parâmetro obrigatório (loja/carro)
  '/store_site/{store_id}/car/{car_id}/remove':
    parameters:
      - name: store_id
        in: path
        description: Código da loja
        required: true
        schema:
          type: integer
      - name: car_id
        in: path
        description: Código da carro
        required: true
        schema:
          type: integer
    post:
      tags:
        - Car
      summary: Solicita a remoção de um carro da plataforma
      description: 'Permite encerrar a venda de um carro, tanto removendo como marcando como vendido'
      operationId: removeCar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCar'
        required: true
      security:
        - api_key: []
      responses:
        '200':
          description: Solicitação efetuada com sucesso
components:
  schemas:
    Car:
      type: object
      description: Dados para um novo carro
      properties:
        color_id:
          type: integer
          description: Código da Cor
        doors:
          type: integer
          description: Quantidade de portas (padrão 4)
        eixos:
          type: string
          description: Informação referente aos eixos (exclusivo para caminhões)
        brand_id:
          type: integer
          description: Código da marca
        fipe_id:
          type: integer
          description: Código da tabela Fipe
        year:
          type: integer
          description: Ano de fabricação do veículo
        observation:
          type: string
          description: Observações
        cost:
          type: number
          description: Preço de custo do carro
        price:
          type: number
          description: Valor do carro
        km:
          type: integer
          description: Quilometragem do carro
        optionals:
          description: Opcionais do carro
          type: array
          items:
            type: integer
      required:
        - color_id
        - brand_id
        - fipe_id
        - year
        - observation
        - price
        - km
        - optionals
    EditCar:
      type: object
      description: Dados para um editar um carro
      properties:
        color_id:
          type: integer
          description: Código da Cor
        doors:
          type: integer
          description: Quantidade de portas (padrão 4)
        eixos:
          type: string
          description: Informação referente aos eixos (exclusivo para caminhões)
        observation:
          type: string
          description: Observações
        cost:
          type: number
          description: Preço de custo do carro
        price:
          type: number
          description: Valor do carro
        km:
          type: integer
          description: Quilometragem do carro
        optionals:
          description: Opcionais do carro
          type: array
          items:
            type: integer
      required:
        - color_id
        - observation
        - price
        - km
        - optionals
    RemoveCar:
      type: object
      description: Dados para remover um carro da plataforma
      properties:
        reason_id:
          type: integer
          description: Motivo da exclusão 1- Vendido pela plataforma 2- Vendido fora da plataforma 3- Somente excluir
        buyer_id:
          type: integer
          description: Para anúncios excluídos motivo 1 você pode informar a id do comprador
      required:
        - reason_id
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Api-Key
